# forward Output Plugin

The `out_forward` Buffered Output plugin forwards events to other fluentd nodes. This plugin supports load-balancing and automatic fail-over (a.k.a. active-active backup). For replication, please use the [out_copy](out_copy) plugin.

The `out_forward` plugin detects server faults using a “φ accrual failure detector” algorithm. You can customize the parameters of the algorithm. When a server fault recovers, the plugin makes the server available automatically after a few seconds.

## Example Configuration

`out_forward` is included in Fluentd's core. No additional installation process is required.

    :::text
    <match pattern>
      type forward
      send_timeout 60s
      recover_wait 10s
      heartbeat_interval 1s
      phi_threshold 8
      hard_timeout 60s
      
      <server>
        name myserver1
        host 192.168.1.3
        port 24224
        weight 60
      </server>
      <server>
        name myserver2
        host 192.168.1.4
        port 24224
        weight 60
      </server>
      ...
      
      <secondary>
        type file
        path /var/log/fluent/forward-failed
      </secondary>
    </match>

NOTE: Please see the <a href="config-file">Config File</a> article for the basic structure and syntax of the configuration file.

## Parameters

### type (required)
The value must be `forward`.

### &lt;server&gt; (at least one is required)
The destination servers. Each server must have following information.

* *name*: The name of the server. This parameter is used in error messages.
* *host* (required): The IP address or host name of the server.
* *port*: The port number of the host. The default is 24224. Note that both TCP packets (event stream) and UDP packets (heartbeat message) are sent to this port.
* *weight*: The load balancing weight. If the weight of one server is 20 and the weight of the other server is 30, events are sent in a 2:3 raito. The default weight is 60.

### &lt;secondary&gt; (optional)
The backup destination that is used when all servers are unavailable.

### send_timeout
The timeout time when sending event logs. The default is 60 seconds.

### recover_wait
The wait time before accepting a server fault recovery. The default is 10 seconds.

### heartbeat_interval
The interval of the heartbeat packer. The default is 1 second.

### phi_threshold
The threshold parameter used to detect server faults. The default value is 8.

### hard_timeout
The hard timeout used to detect server failure. The default value is equal to the send_timeout parameter.

## Buffer Parameters
For advanced usage, you can tune Fluentd's internal buffering mechanism with these parameters.

### buffer_type
The buffer type is `memory` by default ([buf_memory](buf_memory)). The `file` ([buf_memory](buf_memory)) buffer type can be chosen as well. The `path` parameter is used as `buffer_path` in this plugin.

### buffer_queue_limit, buffer_chunk_limit
The length of the chunk queue and the size of each chunk, respectively. Please see the [Buffer Plugin Overview](buffer-plugin-overview) article for the basic buffer structure. The default values are 64 and 8m, respectively. The suffixes “k” (KB), “m” (MB), and “g” (GB) can be used for buffer_chunk_limit.

### flush_interval
The interval between data flushes. The default is 60s. The suffixes “s” (seconds), “m” (minutes), and “h” (hours) can be used.

### retry_wait and retry_limit
The interval between write retries, and the number of retries. The default values are 1.0 and 17, respectively. `retry_wait` doubles every retry (e.g. the last retry waits for 131072 sec, roughly 36 hours).

## Troubleshooting

### "no nodes are available"
Please make sure that you can communicate with port 24224 using **not only TCP, but also UDP**. These commands will be useful for checking the network configuration.

    :::term
    $ telnet host 24224
    $ nmap -p 24224 -sU host

Please note that there is one [known issue](http://kb.vmware.com/selfservice/microsites/search.do?language=en_US&cmd=displayKC&externalId=2019944) where VMware will occasionally lose small UDP packages used for heartbeat.
