# in_tail Input Plugin

The `in_tail` input plugin allows Fluentd to read events from the tail of text files. Its behavior is similar to the `tail -F` command.

### Example Config

`in_tail` is included within Fluentd core. No extra installation process is required.

    :::text
    <source>
      type tail
      path /var/log/httpd-access.log
      pos_file /var/log/td-agent/httpd-access.log.pos
      tag apache.access
      format apache2
    </source>

NOTE: See <a href="config-file">Config File</a> for the basic structure and syntax of the configuration file.

### How it Works

* For newly added configuration, Fluentd starts reading from the **tail** of that log not the beggining.
* Once the log is rotated, Fluentd starts reading the new file from the beggining. It keeps tracking the change of inode number.
* If `td-agent` restarts, it starts reading from the last position td-agent read before the restart. The position is recorded to the file, which is called position file.

### Parameters

#### type (required)
The value must be `tail`.

#### path (required)
Paths separated with ‘,’ to read. This parameter is required.

#### tag (required)
Tag of the event. This parameter is required.

#### format (required)
Format of the log. It’s name of a template or regexp surround by ‘/’.

Regexp must have at least one named captures (?&gt;NAME&lt;PATTERN). If the regexp has capture named ‘time’, it is used as a time of the event. You can specify format of the time using time_format parameter. If the regexp has capture named ‘tag’, tag parameter + captured tag is used as the tag of the event.

Following templates are supported:

* regexp

You can specify the regexp for format parameter. [Fluentular](http://fluentular.herokuapp.com/) is a great website to test your regexp for Fluentd configuration.

* `apache2`

Reads apache’s log file host, user, time, method, path, code, size, referer and agent fields. This template is same as following configuration:

    :::text
    format /^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$/
    time_format %d/%b/%Y:%H:%M:%S %z

* `syslog`

Reads syslog’s output file (e.g. /var/log/syslog) time, host, ident, message fields. This template is same as following configuration:

    :::text
    format /^(?<time>[^ ]* [^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?[^\:]*\: *(?<message>.*)$/
    time_format %b %d %H:%M:%S

* `tsv` or `csv`

If you use tsv or csv format, please also specify `keys` parameter.

    :::text
    format tsv
    keys key1, key2, key3
    time_key key2

If you specify `time_key` parameter, that key is used to identify the timestamp of the record. By default, the timestamp when Fluentd reads that record is used.

    :::text
    format csv
    keys key1, key2, key3
    time_key key3

* `json`

Most straight forward :) One JSON map, per line.

    :::text
    format json

`time_key` parameter can also be specified.

    :::text
    format json
    time_key key3

### pos_file (highly recommended)
This parameter is highly recommended to have it added. If you have this parameter, Fluentd records the position into the file where it already read.

    :::text
    pos_file /var/log/td-agent/tmp/access.log.pos

#### time_format
Format of the time field. This parameter is required only if the format includes ‘time’ capture and it can’t be parsed automatically. See [Time#strftime](http://www.ruby-doc.org/core-1.9.3/Time.html#method-i-strftime).

#### rotate_wait
in_tail does a bit more than `tail -F`. When one is rotating a file, there is a possibility that some data might still need to be written to the old file as opposed to the new one.

in_tail takes care of this by keeping a reference to the old file (even after it’s been rotated) for some time before transitioning to the new file entirely (so that the data designated for the old file don’t get lost). By default, this time interval is 5 seconds.

The rotate_wait parameter accepts a single integer which represents the number of seconds you want to set this time interval to.
