# Plugin Management

This article explains how to manage Fluentd plugins, including adding 3rd party plugins.

## fluent-gem

The `fluent-gem` command is used to install Fluentd plugins. This is a wrapper around the `gem` command.

    :::term
    fluent-gem install fluent-plugin-grep

NOTE: Ruby doesn't guarantee C extension API compatibility between its major versions. If you update Fluentd's Ruby version, you should re-install the plugins that depend on C extension.

### If Using td-agent, Use /usr/sbin/td-agent-gem

If you are using td-agent, please make sure to use td-agent's `td-agent-gem` command. Otherwise (e.g. you use the command belonging to system, rvm, etc.), you won't be able to find your "installed" plugins.

Please see [this FAQ](/articles/faq#i-installed-td-agent-and-want-to-add-custom-plugins-how-do-i-do-it) for more information.

## "-p" option

Fluentd's `-p` option is used to add an extra plugin directory to the load path. For example,
if you put the `out_foo.rb` plugin into `/path/to/plugin`, you can load the `out_foo.rb` plugin by specifying the `-p` option as shown below.

    :::term
    fluentd -p /path/to/plugin

You can specify the `-p` option more than once.

## Add a Plugin Via /etc/fluent/plugin

Fluentd adds the `/etc/fluent/plugin` directory to its load path by default. Thus, any additional plugins that are placed in `/etc/fluent/plugin` will be loaded automatically.

### If Using td-agent, Use /etc/td-agent/plugin

If you are using td-agent, Fluentd uses the `/etc/td-agent/plugin` directory instead of `/etc/fluent/plugin`. Please put your plugins here instead.

## "--gemfile" option

A Ruby application manages gem dependencies using Gemfile and [Bundler](http://bundler.io/). Fluentd's `--gemfile` option takes the same approach, and is useful for managing plugin versions separated from shared gems.

For example, if you have following Gemfile at /etc/fluent/Gemfile:

    :::text
    source 'https://rubygems.org'

    gem 'fluentd', '0.10.43'
    gem 'fluent-plugin-grep', '0.3.2'
    gem 'fluent-plugin-elasticsearch', '0.2.0'

You can pass this Gemfile to Fluentd via the `--gemfile` option.

    :::term
    fluentd --gemfile /etc/fluent/Gemfile

When specifying the `--gemfile` option, Fluentd will try to install the listed gems using Bundler.
Fluentd will only load listed gems separated from shared gems, and will also prevent unexpected plugin updates.

In addition, if you update Fluentd's Ruby version, Bundler will re-install the listed gems for the new Ruby version.
This allows you to avoid the C extension API compatibility problem.
