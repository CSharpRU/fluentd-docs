# 設定ファイル

この記事ではFluentd設定ファイルの基本的な概念について説明します。

## 概要

設定ファイルは、ユーザーが(1)inputプラグインとoutputプラグインを選択し、(2)プラグインパラメータを指定することで、Fluentdの入出力の振る舞いを制御できるようにします。このファイルはFluentdを正常に使用するために必要不可欠です。

## 設定ファイルの場所

#### RPMまたはDeb

rpmまたはdebパッケージを使ってFluentdをインストールした場合、設定ファイルは /etc/td-agent/td-agent.conf に配置されます。 `sudo /etc/init.d/td-agent reload` を実行すると設定ファイルが再読み込みされます。

    :::term
    $ sudo vi /etc/td-agent/td-agent.conf

#### Gem

Ruby Gemを使ってFluentdをインストールした場合、次のコマンドで設定ファイルを作成することができます。SIGHUPシグナルを送ると設定ファイルが再読み込みされます。

    :::term
    $ sudo fluentd --setup /etc/fluent
    $ sudo vi /etc/fluent/fluent.conf

## ディレクティブ一覧

設定ファイルは次のディレクティブで構成されます。

1. **source** ディレクティブは入力元を決定します。
2. **match** ディレクティブは出力先を決定します。
3. **include** ディレクティブは他のファイルをインクルードします。

## (1) Sourceディレクティブ

Fluentdの入力元は **source** ディレクティブを使って使用したいinputプラグインを選択・設定することで有効になります。Fluentdは標準的なinputプラグインとして ``http`` と ``forward`` を含んでいます。

#### 例

    # Receive events from 24224/tcp
    # This is used by log forwarding and the fluent-cat command
    <source>
      type forward
      port 24224
    </source>
    
    # http://this.host:9880/myapp.access?json={"event":"data"}
    <source>
      type http
      port 9880
    </source>

各 **source** ディレクティブは ``type`` パラメータを含んでいる必要があります。 ``type`` パラメータでは使用するinputプラグインを指定します。

#### ルーティング

'source' はFluentdのルーティングエンジンにイベントを送信します。イベントは、 **tag**, **time**, **record** という3つの要素で構成されます。tagは'.'で区切られた文字列(例: myapp.access)で、Fluentd内部のルーティングエンジンによって使われます。timeはイベントが発生したUNIXタイムです。recordはJSONオブジェクトです。

上記の設定例ではHTTP inputプラグインは次のイベントを送信します。

    # generated by http://this.host:9880/myapp.access?json={"event":"data"}
    tag: myapp.access
    time: (current time)
    record: {"event":"data"}

#### プラグイン

ユーザーは独自のプラグインを作成することで、デフォルトのオプションを超えてFluentdの入力元を拡張することができます。Fluentdの入力元に関する詳細については、[Inputプラグイン概要](input-plugin-overview)の記事を参照してください。

## (2) Matchディレクティブ

Fluentdの出力先は **match** ディレクティブを使って使用したいoutputプラグインを選択・設定することにより有効になります。Fluentdは標準的なoutputプラグインとして ``file`` と ``forward`` を含んでいます。

#### 例

    # Match events tagged with "myapp.access" and
    # store them to /var/log/fluent/access.%Y-%m-%d
    <match myapp.access>
      type file
      path /var/log/fluent/access
    </match>
    
    <match myapp.log.**>
      type file
      format /var/log/fluent/myapp_hourly
      time_slice_format %Y%m%d%H
    </match>

各 **match** ディレクティブは ``type`` パラメータとmatchパターンを含んでいる必要があります。Matchパターンはイベントのフィルターとして使用されます。イベントの **tag** がパターンと合致した場合のみ出力先に送られます。 ``type`` パラメータは使用するoutputプラグインを指定します。

例えば、ユーザーは ``myapp.accesslog.**`` パターンに合致したすべてを指定したディレクトリ内の ``file`` に送ることができます。

ユーザーは独自のプラグインを作成することで、デフォルトのオプションを超えてFluentdの出力先を拡張することができます。Fluentdの出力先に関する詳細については、[Outputプラグイン概要](output-plugin-overview)の記事を参照してください。

### Matchパターン

次のmatchパターンが使用できます。

* ``*`` は1つのtag要素に合致します。

  * 例えば、 ``a.*`` というパターンは ``a.b`` には合致しますが、 ``a`` や ``a.b.c`` には合致しません。

* ``**`` は0個以上のtag要素に合致します。

  * 例えば、 ``a.**`` というパターンは ``a``, ``a.b``, ``a.b.c`` に合致します。

* ``{X,Y,Z}`` は X, Y, Z にマッチします、なお X, Y, Z はmatchパターンです。

  * 例えば、 ``{a,b}`` というパターンは ``a`` や ``b`` には合致しますが、 ``c`` には合致しません。

  * これは ``*`` パターンや ``**`` パターンと組み合わせて使うこともできます。例えば ``a.{b,c}.*`` や ``a.{b,c.**}`` です。


## (3) Includeディレクティブ

分割した設定ファイルのディレクティブは **include** ディレクティブを使って読み込むことができます。

    # Include config files in the ./config.d directory
    include config.d/*.conf

includeディレクティブは、通常のファイルpath, globパターン, http URLをサポートします。

    # absolute path
    include /path/to/config.conf

    # if using a relative path, the directive will use 
    # the dirname of this config file to expand the path
    include extra.conf

    # glob match pattern
    include config.d/*.conf

    # http
    include http://example.com/fluent.conf
