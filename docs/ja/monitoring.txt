# Fluentdの監視

この記事では `Fluentd` デーモンの監視方法について説明します。

## 監視エージェント

FluentdはHTTP経由でJSON形式の内部メトリックを取得できる監視エージェントを持っています。設定ファイルに次の項目を追加してください。

    :::text
    <source>
      type monitor_agent
      bind 0.0.0.0
      port 24220
    </source>

次に、エージェントを再起動し、HTTP経由でメトリックを取得してください。

    :::term
    $ curl http://host:24220/api/plugins.json
    {"plugins":[{"plugin_id":"object:3fec669d6ac4","type":"forward","output_plugin":false,"config":{"type":"forward"}},{"plugin_id":"object:3fec669daf98","type":"http","output_plugin":false,"config":{"type":"http","port":"8888"}},{"plugin_id":"object:3fec669dfa48","type":"monitor_agent","output_plugin":false,"config":{"type":"monitor_agent","port":"24220"}},{"plugin_id":"object:3fec66a52e94","type":"debug_agent","output_plugin":false,"config":{"type":"debug_agent","port":"24230"}},{"plugin_id":"object:3fec66ae3dcc","type":"stdout","output_plugin":true,"config":{"type":"stdout"}},{"plugin_id":"object:3fec66aead48","type":"forward","output_plugin":true,"buffer_queue_length":0,"buffer_total_queued_size":0,"retry_count":0,"config":{"type":"forward","host":"192.168.0.11"}}]}%

## プロセスの監視

2つの `ruby` プロセス(親と子)が実行されています。これらのプロセスが実行されていることを確認してください。 `td-agent` の例を以下に示します。

    :::term
    /opt/td-agent/embedded/bin/ruby /usr/sbin/td-agent
      --daemon /var/run/td-agent/td-agent.pid
      --log /var/log/td-agent/td-agent.log

Linux上で動作しているtd-agentの場合、次のコマンドでプロセスの状態をチェックすることができます。何も問題が発生していなければ、2つのプロセスが表示されるはずです。

    $ ps w -C ruby -C td-agent --no-heading
    32342 ?        Sl     0:00 /opt/td-agent/embedded/bin/ruby /usr/sbin/td-agent --daemon /var/run/td-agent/td-agent.pid --log /var/log/td-agent/td-agent.log
    32345 ?        Sl     0:01 /opt/td-agent/embedded/bin/ruby /usr/sbin/td-agent --daemon /var/run/td-agent/td-agent.pid --log /var/log/td-agent/td-agent.log

もしtd-agent 1を使っておられるなら、Rubyのpathは`/opt/td-agent/embedded/bin/ruby`ではなく`/usr/lib/fluent/ruby/bin/ruby`となります。

## ポートの監視

Fluentdは設定ファイルに、設定ファイルに従っていくつかのポートを開きます。これらのポートが使用可能なことを確認するようお勧めします。デフォルトのポート設定は以下の通りです。

* TCP 0.0.0.0 8888 (HTTP by default)
* TCP 0.0.0.0 24224 (Forward by default)

### デバッグ用のポート

ローカル通信用のデバッグポートは、トラブルシューティングのためにお勧めします。以下の設定が必要ですのでご注意ください。

    :::text
    <source>
      type debug_agent
      bind 127.0.0.1
      port 24230
    </source>

dRubyを使って `fluent-debug` コマンドでプロセスにattachすることができるようになります。
