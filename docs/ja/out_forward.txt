# forwardアウトプットプラグイン

`out_forward`バッファアウトプットプラグインは他のfluentdのノードにイベントを転送します。このプラグインはロードバランシングと自動フェイルオーバー(active-activeバックアップ)をサポートしています。レプリケーションには、[out_copy](out_copy)プラグインを使用してくだい。

`out_forward`プラグインは「φ accrual failure detector」アルゴリズムを使用して、サーバの障害を検知します。あなたは、アルゴリズムのパラメータをカスタマイズすることができます。サーバの障害から回復するとき、プラグインは数秒後に自動的にサーバを利用可能にします。

## 設定例

`out_forward`ははFluentdのコアに含まれています。追加のインストール作業は必要ありません。

    :::text
    <match pattern>
      type forward
      send_timeout 60s
      recover_wait 10s
      heartbeat_interval 1s
      phi_threshold 8
      hard_timeout 60s
      
      <server>
        name myserver1
        host 192.168.1.3
        port 24224
        weight 60
      </server>
      <server>
        name myserver2
        host 192.168.1.4
        port 24224
        weight 60
      </server>
      ...
      
      <secondary>
        type file
        path /var/log/fluent/forward-failed
      </secondary>
    </match>

NOTE: 設定ファイルの基本的な構造や文法に関しては、<a href="config-file">設定ファイル</a>の記事を参照してください。

## パラメータ

### type (必須)
値は`forward`でなければなりません。

### &lt;server&gt; (少なくとも一つは必須)

送信先サーバ。各サーバは次の情報を保持しなければなりません。

* *name*: サーバ名。このパラメータはエラーメッセージで使用されます。
* *host* (必須): サーバのIPアドレスまたは、ホスト名。
* *port*: ホストのポート番号。デフォルトは24224です。TCPパケット(イベントストリーム)とUDPパケット(heartbeatメッセージ)の両方がこのポートに送信されることに注意してください。
* *weight*: ロードバランシングの重み。一つのサーバのウエイトが20で、他のサーバのウエイトが30の場合、イベントは2:3の割合で送信されます。デフォルトの重みは60です。

### &lt;secondary&gt; (任意)
全サーバが利用不可能な時に使用されるバックアップ送信先。

### send_timeout
イベントログを送信するときのタイムアウト時間。デフォルトは60秒です。

### recover_wait
サーバ障害の復旧を受けいる前の待機時間。デフォルトは10秒です。

### heartbeat_type
heartbeatに使用する送信プロトコル。デフォルトは「udp」ですが、あなたは「tcp」を選択することもできます。

### heartbeat_interval
heartbeat packerの間隔。デフォルトは1秒です。

### phi_threshold
サーバ障害を検知に使用されるしきい値パラメータ。デフォルト値は8です。

### hard_timeout
サーバ障害を検知に使用されるハードタイムアウト。デフォルト値はsend_timeoutパラメータと同じです。

### standby
Fluentdノード間のアクティブ-スタンバイモデルのスタンバイノードとしてノードをマークします。アクティブノードがダウンすると、スタンバイノードをアクティブノードに昇格します。スタンバイノードはそれまで`out_forward`プラグインでは使用されません。

    :::text
    <match pattern>
      type forward
      ...
      
      <server>
        name myserver1
        host 192.168.1.3
        weight 60
      </server>
      <server>  # forward doesn't use myserver2 until myserver1 goes down
        name myserver2
        host 192.168.1.4
        weight 60
        standby
      </server>
      ...
    </match>


INCLUDE: _buffer_parameters

INCLUDE: _log_level_params


## トラブルシューティング

### "どのノードも利用できない"
あなたは**TCPだけでなく、UDPも**を使用して、ポート24224で通信できることを確認してください。このコマンドはネットワーク設定をチェックすることに役立ちます。

    :::term
    $ telnet host 24224
    $ nmap -p 24224 -sU host

VMwareは、時折、heartbeatのために使用される小型のUDPパケットを失うことになる[既知の問題](http://kb.vmware.com/selfservice/microsites/search.do?language=en_US&cmd=displayKC&externalId=2019944)があることに注意してください。
