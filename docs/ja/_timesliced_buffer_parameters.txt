## Time Slicedアウトプットパラメータ
高度な使用方法については、次のパラメータでFluentdの内部バッファリング機構を調整できます。

### time_slice_format
時間フォーマットはファイル名の一部として使用されます。以下の文字はファイルが生成されるときに、実際の値で置換されます。

* %Y: 世紀を含む年 (少なくとも4つの数字)
* %m: 月 (01..12)
* %d: 日 (01..31)
* %H: 時間、 24時間表記 (00..23)
* %M: 分 (00..59)
* %S: 秒 (00..60)

デフォルトフォーマットは`%Y%m%d`です。1日毎に1ファイルを生成します。1時間ごとに1ファイル作成するには`%Y%m%d%H`を使用してください。

### time_slice_wait
Fluentdが古いログが到着するまでに待つ時間量です。これはFluentdノードに到着したログの遅延を考慮するために使用されます。デフォルト待機時間は10分(「10m」)、Fluentdは過去1時間以内に発生した任意のログのために10分まで待ちます。

例えば、1時間単位でファイルを分割するとき、1:59に記録されたが、2:00と2:10の間にFluentdノードに到着したログは、余分なオーバーヘッドを避けるため、すべての他の1:00と1:59の間のログと一緒に一つのトランザクションでアップロードされます。必要に応じて大きな値を設定することができます。

### buffer_type
バッファタイプはデフォルトで`file`([buf_file](buf_file))です。
`memory` ([buf_memory](buf_memory))バッファタイプも選択することができます。
`path`パラメータはこのプラグインで`buffer_path`として、使用されます。

### buffer_queue_limit, buffer_chunk_limit
それぞれ、チャンクキューの長さと各々のチャンクのサイズ。基本バッファ構造は[Buffer Plugin Overview](buffer-plugin-overview)の記事を参照してください。デフォルト値はそれぞれ、64と8mです。接尾辞として「k」 (KB), 「m」 (MB), および 「g」 (GB)はbuffer_chunk_limitで使用できます。

### flush_interval
データフラッシュの間隔。デフォルトは60sです。接尾辞として「s」 (秒), 「m」 (分)および「h」(時間)を使用することができます。

### retry_wait, retry_limit and max_retry_wait
書き込みのリトライ間隔とリトライ数。デフォルト値は各々、1.0と17です。`retry_wait`はリトライ毎に2倍になります(例. 最後のリトライは131072秒、およそ36時間待ちます)。そして、`max_retry_wait`は最大リトライ間隔の制限として使用することができます。

### num_threads
フラッシュとバッファのスレッド数。このオプションはアウトプット先へのデータ書き込みを並列にすることができます。デフォルトは1です。

