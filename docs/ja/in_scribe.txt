# scribeインプットプラグイン

`in_scribe`インプットプラグインはFluentdがScribeプロトコルでレコードを取得することを可能にします。[Scribe](https://github.com/facebook/scribe)はFacebookによってオープンソース化された別のログコレクタデーモンです。

Scribeは最近あまりメンテナンスされていないので、このプラグインは既存のScribeインフラストラクチャでFluentdを使用したい既存のScribeユーザーに役立ちます。

### インストール

`in_scribe`はデフォルトでtd-agentに含まれています。Fluentd gemユーザーは次のコマンドで　使用して、fluent-plugin-scribe gemをインストールする必要があります。

    :::term
    $ fluent-gem install fluent-plugin-scribe

### 設定例

    :::text
    <source>
      type scribe
      port 1463

      bind 0.0.0.0
      msg_format json
    </source>

NOTE: 設定ファイルの基本的な構造や文法に関しては、<a href="config-file">設定ファイル</a>の記事を参照してください。

#### 利用例

私たちはあなたがすでにScribeプロトコルに精通していると想定しています。この[Rubyサンプルコード](https://github.com/fluent/fluent-plugin-scribe/blob/master/bin/fluent-scribe-remote)は`in_scribe`にログを送信します。

Scribeの`category`フィールドはFluentdイベントログの`tag`になり、Scribeの`message`フィールドはレコード自体になります。`msg_format`パラメータは`message`フィールドのフォーマットを指定します。

### パラメータ

#### type (必須)
値は`scribe`でなければなりません。

#### port
リッスンするポートです。デフォルト値は1463です。

#### bind
リッスンするためのバインドアドレスです。デフォルト値は0.0.0.0(すべてのアドレス)です。

#### msg_format

メッセージフォーマットは‘text’、‘json’または‘url_param’(デフォルトはtext)にすることができます。

`json`向けに、Fluentdのレコードは次のように構成されています。Scribeのメッセージフィールドはハッシュを表す有効なJSON文字列にしなければなりません。それゆえ、レコードは無視されます。

    tag: $category
    record: $message

`text`向けに、Fluentdのレコードは次のように構成されています。Scribeのメッセージフィールドは任意の文字列することができますが、その後に続く分析パイプラインでの使用を容易にするためにJSONが推奨されます。

    tag: $category
    record: {'message': $message}

`url_param`向けに、Fluentdのレコードは次のように構成されています。ScribeのメッセージフィールドはURLエンコーディングしたURLのパラメータースタイルのキーと値のペア(例 key1=val1&key2=val2)を含まなければなりません。

    tag: $url_param
    record: {$key1: $val1, $key2: $val2, ...}

#### is_framed
Thriftのフレームドプロトコルを使用するかどうかを指定します。(デフォルトはtrue)

#### server_type
サーバアーキテクチャを選択します。オプションは‘simple’、‘threaded’、‘thread_pool’または‘nonblocking’です。(デフォルトはnonblocking)

####  add_prefix
tagに常に追加されるプレフィックス文字列です。(デフォルトはnil)
